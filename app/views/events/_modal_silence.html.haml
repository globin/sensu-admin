- len = Setting.min_desc_length.to_i
- if type.match("client")
  - header_title = "Silence client #{event.client}"
  - suffix = "#{event.client}"
- else
  - header_title = "Silence check #{event.check} on client #{event.client}"
  - suffix = "#{event.client}_#{event.check}"
.modal-dialog
  .modal-content
    .modal-header
      %h3= header_title
    .modal-body
      %div Note: Your event handler must use sensu-plugin or hit the API to make use of silencing.
      .silence-reason
        %label{:for => "text_input_#{suffix}"} Enter reason
        %textarea.form-control.silence-input{:id => "text_input_#{suffix}", :index_id => i, :data => {:min => len}, :misc => suffix, :rel => "Silence #{type}", :rows => "3", :type => "text", :placeholder => "Silence #{type} reason"}
      .silence-time
        %h4 Expire at (Optional):
        %label{:for => "silence_expire_at_date_#{suffix}"} Date:
        %input.form-control.datepicker{:id => "silence_expire_at_date_#{suffix}"}
        %label{:for => "silence_expire_at_time_#{suffix}"} Time:
        %input.form-control.timepicker{:id => "silence_expire_at_time_#{suffix}"}
    .modal-footer
      - if len > 0
        %a.silence-submit-event.btn.btn-inverse{:control => "silence_submit_#{suffix}", :index_id => i, :misc => suffix, :rel => "/events/#{suffix.sub("_","/")}/silence"} Submit
      - else
        %a.silence-submit-event.btn.btn-success{:control => "silence_submit_#{suffix}", :index_id => i, :misc => "#{suffix}", :rel => "/events/#{suffix.sub("_","/")}/silence"} Submit
